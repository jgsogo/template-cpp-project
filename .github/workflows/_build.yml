---
name: "(chunk) Build C++ project"

on:
  workflow_call:
    inputs:
      docker_image:
        type: string
        required: false
        default: conanio/gcc10:1.43.3  # TODO: Use new docker images (gcc10)
      library_name:
        type: string
        required: true
        description: "Name of the library. It should match name of the repository"
      library_version:
        type: string
        required: true
        description: "Version of the library."
      github_sha:
        type: string
        required: true
      remote_center:
        type: string
        required: false
        default: https://sogo.jfrog.io/artifactory/api/conan/conan-center

env:
  CONAN_USER_HOME: /home/conan

defaults:
  run:
    working-directory: /home/conan/library

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.docker_image }}
    env:
      CONAN_USER_HOME: /home/conan
      CONAN_SYSREQUIRES_MODE: enabled
      CONAN_PRINT_RUN_COMMANDS: 1
    steps:
      - name: Upgrade Git version
        working-directory: /home/conan
        run: |
          sudo apt-get update
          sudo apt-get install software-properties-common -y
          sudo add-apt-repository ppa:git-core/ppa -y
          sudo apt-get update
          sudo apt-get install git -y

      - name: Install jq
        working-directory: /home/conan
        run: |
          sudo apt-get install jq -y

      - name: Check out repository code
        uses: rodrigorodriguescosta/checkout@1d64c0a4a695ff5edb95596c11b430050668c83f  # FIXME: Not using actions/checkout just because of 'https://github.com/actions/checkout/pull/388'
        with:
          path: /home/conan/library

      - name: Cache Conan packages
        uses: actions/cache@v2
        with:
          key: conan-cache-${{ inputs.library_name }}
          path: /home/conan/.conan

      - name: Configure Conan
        run: |
          conan config set general.revisions_enabled=1
          conan config install https://github.com/conan-io/conanclientcert.git
          conan --version
          conan config home

      - name: Connect to remote
        run: |
          conan remote add sogo ${{ inputs.remote_center }}

      - name: Prepare deps
        run: |
          cp -r .conan/profiles /home/conan/.conan
          conan profile list
          mkdir cmake-build-cpp20

      - name: Compute lockfile for current configuration
        run: |
          mkdir build && cd build
          conan lock create --profile:host=cpp20 --profile:build=default --lockfile=../lockfile.json --lockfile-out=lockfile.json --name=${{ inputs.library_name }} --version=${{ inputs.library_version }} ../conanfile.txt --build --update

      - name: Build the build-requires
        # This is needed because of https://github.com/conan-io/conan/issues/10345, but
        # if we use stable docker image (current epoch), all BR should be available in ConanCenter
        run: |
          jq '.graph_lock.nodes[] | select( .context=="build") | .ref' build/lockfile.json | while read -r reference ; do
              ref=$(echo $reference | sed 's/#/@#/g')
              ref_unquoted=$(echo $ref | sed 's/\"//g')
              conan install $ref_unquoted --build=missing --profile:host=default --profile:build=default
          done

      - name: Build dependencies
        run: |
          cd build
          conan install --lockfile=lockfile.json ../conanfile.txt --build=missing --generator=virtualenv
          conan remove "*" --builds --force
          conan remove "*" --src --force

      - name: Build the project
        run: |
          cd build
          . ./activate.sh
          cmake .. -DCMAKE_MODULE_PATH=$(pwd) -DCMAKE_TOOLCHAIN_FILE=$CONAN_CMAKE_TOOLCHAIN_FILE
          make

      - name: Run tests
        run: |
          cd build
          tests/unit_tests
